const t={"color-primary":"#0066cc","color-primary-light":"#4d94ff","color-primary-dark":"#004c99","color-secondary":"#6c757d","color-secondary-light":"#a1a8ae","color-secondary-dark":"#494f54","color-success":"#28a745","color-success-light":"#48d368","color-danger":"#dc3545","color-danger-light":"#ef6b7b","color-warning":"#ffc107","color-info":"#17a2b8","color-white":"#ffffff","color-gray-100":"#f8f9fa","color-gray-200":"#e9ecef","color-gray-300":"#dee2e6","color-gray-400":"#ced4da","color-gray-500":"#adb5bd","color-gray-600":"#6c757d","color-gray-700":"#495057","color-gray-800":"#343a40","color-gray-900":"#212529","color-black":"#000000","font-family":'system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, sans-serif',"font-size-xs":"0.75rem","font-size-sm":"0.875rem","font-size-base":"1rem","font-size-lg":"1.125rem","font-size-xl":"1.25rem","font-size-2xl":"1.5rem","font-size-3xl":"1.875rem","font-size-4xl":"2.25rem","font-size-5xl":"3rem","font-weight-light":"300","font-weight-regular":"400","font-weight-medium":"500","font-weight-semibold":"600","font-weight-bold":"700","line-height-none":"1","line-height-tight":"1.25","line-height-snug":"1.375","line-height-normal":"1.5","line-height-relaxed":"1.625","line-height-loose":"2","spacing-xs":"0.25rem","spacing-sm":"0.5rem","spacing-md":"1rem","spacing-lg":"1.5rem","spacing-xl":"2rem","spacing-2xl":"3rem","spacing-3xl":"4rem","spacing-4xl":"6rem","border-radius-none":"0","border-radius-sm":"0.125rem","border-radius-md":"0.25rem","border-radius-lg":"0.5rem","border-radius-xl":"0.75rem","border-radius-full":"9999px","elevation-none":"none","elevation-low":"0 1px 2px 0 rgba(0, 0, 0, 0.05)","elevation-medium":"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)","elevation-high":"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)","elevation-x-high":"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)","animation-fast":"150ms","animation-normal":"300ms","animation-slow":"500ms","animation-easing-ease":"ease","animation-easing-linear":"linear","animation-easing-ease-in":"ease-in","animation-easing-ease-out":"ease-out","animation-easing-ease-in-out":"ease-in-out","button-primary-background":"var(--ds-color-primary)","button-primary-color":"var(--ds-color-white)","button-primary-hover-background":"var(--ds-color-primary-dark)","button-secondary-background":"var(--ds-color-secondary)","button-secondary-color":"var(--ds-color-white)","button-secondary-hover-background":"var(--ds-color-secondary-dark)","input-border-color":"var(--ds-color-gray-300)","input-border-color-hover":"var(--ds-color-gray-400)","input-border-color-focus":"var(--ds-color-primary)","input-border-color-error":"var(--ds-color-danger)","input-background":"var(--ds-color-white)","input-text-color":"var(--ds-color-gray-900)","input-placeholder-color":"var(--ds-color-gray-500)","input-label-color":"var(--ds-color-gray-700)","input-disabled-background":"var(--ds-color-gray-100)","input-disabled-color":"var(--ds-color-gray-600)","card-background":"var(--ds-color-white)","card-border-radius":"var(--ds-border-radius-lg)","card-border-color":"var(--ds-color-gray-200)","card-padding":"var(--ds-spacing-lg)","tabs-color":"var(--ds-color-gray-900)","tabs-color-hover":"var(--ds-color-primary)","tabs-active-color":"var(--ds-color-primary)","tabs-active-border-color":"var(--ds-color-primary)","tabs-border-color":"var(--ds-color-gray-300)"},r={light:t,dark:{...t,"color-white":"#121212","color-black":"#ffffff","color-gray-100":"#2d2d2d","color-gray-200":"#333333","color-gray-300":"#444444","color-gray-400":"#555555","color-gray-500":"#777777","color-gray-600":"#999999","color-gray-700":"#bbbbbb","color-gray-800":"#dddddd","color-gray-900":"#eeeeee","card-background":"var(--ds-color-gray-100)","input-background":"var(--ds-color-gray-200)","input-text-color":"var(--ds-color-gray-800)","input-placeholder-color":"var(--ds-color-gray-600)","input-disabled-background":"var(--ds-color-gray-300)","input-disabled-color":"var(--ds-color-gray-500)"}};function e(t="light",e=document.documentElement){const o=r[t]||r.light;return Object.entries(o).forEach((([t,r])=>{e.style.setProperty(`--ds-${t}`,r)})),e.dataset.theme=t,o}function o(t=document.documentElement){const r=function(t=document.documentElement){return t.dataset.theme||"light"}(t);return e("light"===r?"dark":"light",t)}const n={primary:"var(--ds-color-primary, #0066cc)",primaryLight:"var(--ds-color-primary-light, #4d94ff)",primaryDark:"var(--ds-color-primary-dark, #004c99)",secondary:"var(--ds-color-secondary, #6c757d)",secondaryLight:"var(--ds-color-secondary-light, #a1a8ae)",secondaryDark:"var(--ds-color-secondary-dark, #494f54)",success:"var(--ds-color-success, #28a745)",successLight:"var(--ds-color-success-light, #48d368)",danger:"var(--ds-color-danger, #dc3545)",dangerLight:"var(--ds-color-danger-light, #ef6b7b)",warning:"var(--ds-color-warning, #ffc107)",info:"var(--ds-color-info, #17a2b8)",white:"var(--ds-color-white, #ffffff)",gray100:"var(--ds-color-gray-100, #f8f9fa)",gray200:"var(--ds-color-gray-200, #e9ecef)",gray300:"var(--ds-color-gray-300, #dee2e6)",gray400:"var(--ds-color-gray-400, #ced4da)",gray500:"var(--ds-color-gray-500, #adb5bd)",gray600:"var(--ds-color-gray-600, #6c757d)",gray700:"var(--ds-color-gray-700, #495057)",gray800:"var(--ds-color-gray-800, #343a40)",gray900:"var(--ds-color-gray-900, #212529)",black:"var(--ds-color-black, #000000)"},a="var(--ds-spacing-xs, 0.25rem)",s="var(--ds-spacing-sm, 0.5rem)",i="var(--ds-spacing-md, 1rem)",d="var(--ds-spacing-lg, 1.5rem)",l='var(--ds-font-family, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, sans-serif)',c={sm:"var(--ds-font-size-sm, 0.875rem)",base:"var(--ds-font-size-base, 1rem)",lg:"var(--ds-font-size-lg, 1.125rem)"},b={medium:"var(--ds-font-weight-medium, 500)"},u={none:"var(--ds-elevation-none, none)",low:"var(--ds-elevation-low, 0 1px 2px 0 rgba(0, 0, 0, 0.05))",medium:"var(--ds-elevation-medium, 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06))",high:"var(--ds-elevation-high, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05))","x-high":"var(--ds-elevation-x-high, 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04))"},h="var(--ds-animation-fast, 150ms)",v="var(--ds-animation-normal, 300ms)",g={easeOut:"var(--ds-animation-easing-ease-out, ease-out)",easeInOut:"var(--ds-animation-easing-ease-in-out, ease-in-out)"};class p extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return["variant","size","disabled","full-width"]}attributeChangedCallback(t,r,e){r!==e&&this.render()}connectedCallback(){this.render(),this.addEventListeners()}disconnectedCallback(){this.removeEventListeners()}addEventListeners(){this.shadowRoot.querySelector("button").addEventListener("click",this.handleClick.bind(this))}removeEventListeners(){this.shadowRoot.querySelector("button").removeEventListener("click",this.handleClick.bind(this))}handleClick(t){this.hasAttribute("disabled")||this.dispatchEvent(new CustomEvent("ds-click",{bubbles:!0,composed:!0}))}render(){const t=this.getAttribute("variant")||"primary",r=this.getAttribute("size")||"medium",e=this.hasAttribute("disabled"),o=this.hasAttribute("full-width");this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: ${o?"block":"inline-block"};\n          --button-background: var(--ds-button-${t}-background, ${n[t]});\n          --button-color: var(--ds-button-${t}-color, white);\n          --button-border: var(--ds-button-${t}-border, none);\n          --button-hover-background: var(--ds-button-${t}-hover-background, ${n[t+"Dark"]});\n          --button-active-background: var(--ds-button-${t}-active-background, ${n[t+"Dark"]});\n          --button-focus-ring: var(--ds-button-${t}-focus-ring, ${n[t+"Light"]}40);\n          \n          /* Size properties can be customized per theme */\n          --button-padding-x: var(--ds-button-${r}-padding-x, ${"small"===r?s:"large"===r?d:i});\n          --button-padding-y: var(--ds-button-${r}-padding-y, ${"small"===r?a:"large"===r?i:s});\n          --button-font-size: var(--ds-button-${r}-font-size, ${"small"===r?c.sm:"large"===r?c.lg:c.base});\n          --button-border-radius: var(--ds-button-border-radius, 4px);\n        }\n        \n        button {\n          font-family: ${l};\n          font-size: var(--button-font-size);\n          font-weight: ${b.medium};\n          color: var(--button-color);\n          background-color: var(--button-background);\n          border: var(--button-border);\n          border-radius: var(--button-border-radius);\n          padding: var(--button-padding-y) var(--button-padding-x);\n          cursor: ${e?"not-allowed":"pointer"};\n          opacity: ${e?"0.6":"1"};\n          transition: background-color ${v} ${g.easeInOut},\n                      transform ${h} ${g.easeOut},\n                      box-shadow ${h} ${g.easeOut};\n          width: ${o?"100%":"auto"};\n          position: relative;\n          overflow: hidden;\n        }\n        \n        button:hover:not(:disabled) {\n          background-color: var(--button-hover-background);\n        }\n        \n        button:active:not(:disabled) {\n          background-color: var(--button-active-background);\n          transform: translateY(1px);\n        }\n        \n        button:focus {\n          outline: none;\n        }\n        \n        button:focus-visible {\n          box-shadow: 0 0 0 3px var(--button-focus-ring);\n        }\n        \n        /* Ripple effect */\n        .ripple {\n          position: absolute;\n          border-radius: 50%;\n          transform: scale(0);\n          animation: ripple 600ms ${g.easeOut};\n          background-color: rgba(255, 255, 255, 0.3);\n        }\n        \n        @keyframes ripple {\n          to {\n            transform: scale(4);\n            opacity: 0;\n          }\n        }\n      </style>\n      \n      <button ?disabled="${e}">\n        <slot></slot>\n      </button>\n    `;const u=this.shadowRoot.querySelector("button");e||u.addEventListener("mousedown",(function(t){const r=u.getBoundingClientRect(),e=t.clientX-r.left,o=t.clientY-r.top,n=document.createElement("span");n.classList.add("ripple"),n.style.left=e+"px",n.style.top=o+"px",u.appendChild(n),setTimeout((()=>{n.remove()}),600)}))}}customElements.define("ds-button",p);class m extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return["placeholder","value","disabled","error","label"]}attributeChangedCallback(t,r,e){r!==e&&this.render()}connectedCallback(){this.render(),this._setupEventListeners()}disconnectedCallback(){this._removeEventListeners()}_setupEventListeners(){const t=this.shadowRoot.querySelector("input");t&&(t.addEventListener("input",this._handleInput.bind(this)),t.addEventListener("focus",this._handleFocus.bind(this)),t.addEventListener("blur",this._handleBlur.bind(this)))}_removeEventListeners(){const t=this.shadowRoot.querySelector("input");t&&(t.removeEventListener("input",this._handleInput.bind(this)),t.removeEventListener("focus",this._handleFocus.bind(this)),t.removeEventListener("blur",this._handleBlur.bind(this)))}_handleInput(t){this.setAttribute("value",t.target.value),this.dispatchEvent(new CustomEvent("ds-input",{bubbles:!0,composed:!0,detail:{value:t.target.value}}))}_handleFocus(){this.setAttribute("focused","")}_handleBlur(){this.removeAttribute("focused")}render(){const t=this.getAttribute("placeholder")||"",r=this.getAttribute("value")||"",e=this.hasAttribute("disabled"),o=this.getAttribute("error")||"",d=this.getAttribute("label")||"";this.hasAttribute("focused"),this.shadowRoot.innerHTML=`\n\t\t\t<style>\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\t--input-border-color: var(--ds-input-border-color, ${n.gray300});\n\t\t\t\t\t--input-border-color-hover: var(--ds-input-border-color-hover, ${n.gray400});\n\t\t\t\t\t--input-border-color-focus: var(--ds-input-border-color-focus, ${n.primary});\n\t\t\t\t\t--input-border-color-error: var(--ds-input-border-color-error, ${n.danger});\n\t\t\t\t\t--input-background: var(--ds-input-background, white);\n\t\t\t\t\t--input-text-color: var(--ds-input-text-color, ${n.gray900});\n\t\t\t\t\t--input-placeholder-color: var(--ds-input-placeholder-color, ${n.gray500});\n\t\t\t\t\t--input-label-color: var(--ds-input-label-color, ${n.gray700});\n\t\t\t\t\t--input-disabled-background: var(--ds-input-disabled-background, ${n.gray100});\n\t\t\t\t\t--input-disabled-color: var(--ds-input-disabled-color, ${n.gray600});\n\t\t\t\t}\n\n\t\t\t\t.input-container {\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tmargin-bottom: ${i};\n\t\t\t\t}\n\n\t\t\t\tlabel {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmargin-bottom: ${a};\n\t\t\t\t\tfont-family: ${l};\n\t\t\t\t\tfont-size: ${c.sm};\n\t\t\t\t\tfont-weight: ${b.medium};\n\t\t\t\t\tcolor: var(--input-label-color);\n\t\t\t\t}\n\n\t\t\t\tinput {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tpadding: ${s} ${i};\n\t\t\t\t\tfont-family: ${l};\n\t\t\t\t\tfont-size: ${c.base};\n\t\t\t\t\tcolor: var(--input-text-color);\n\t\t\t\t\tbackground-color: var(--input-background);\n\t\t\t\t\tborder: 1px solid var(--input-border-color);\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t\ttransition: border-color 0.2s, box-shadow 0.2s;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t}\n\n\t\t\t\tinput:hover:not(:disabled) {\n\t\t\t\t\tborder-color: var(--input-border-color-hover);\n\t\t\t\t}\n\n\t\t\t\tinput:focus {\n\t\t\t\t\toutline: none;\n\t\t\t\t\tborder-color: var(--input-border-color-focus);\n\t\t\t\t\tbox-shadow: 0 0 0 3px ${n.primaryLight}40;\n\t\t\t\t}\n\n\t\t\t\tinput::placeholder {\n\t\t\t\t\tcolor: var(--input-placeholder-color);\n\t\t\t\t}\n\n\t\t\t\tinput:disabled {\n\t\t\t\t\tbackground-color: var(--input-disabled-background);\n\t\t\t\t\tcolor: var(--input-disabled-color);\n\t\t\t\t\tcursor: not-allowed;\n\t\t\t\t}\n\n\t\t\t\t.error-message {\n\t\t\t\t\tmargin-top: ${a};\n\t\t\t\t\tcolor: var(--input-border-color-error);\n\t\t\t\t\tfont-size: ${c.sm};\n\t\t\t\t}\n\n\t\t\t\tinput.error {\n\t\t\t\t\tborder-color: var(--input-border-color-error);\n\t\t\t\t}\n\n\t\t\t\tinput.error:focus {\n\t\t\t\t\tbox-shadow: 0 0 0 3px ${n.dangerLight}40;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t\n\t\t\t<div class="input-container">\n\t\t\t\t${d?`<label for="input">${d}</label>`:""}\n\t\t\t\t<input \n\t\t\t\tid="input"\n\t\t\t\ttype="text" \n\t\t\t\tplaceholder="${t}" \n\t\t\t\tvalue="${r}" \n\t\t\t\t?disabled="${e}" \n\t\t\t\tclass="${o?"error":""}"\n\t\t\t\t/>\n\t\t\t\t${o?`<div class="error-message">${o}</div>`:""}\n\t\t\t</div>\n    \t`}}customElements.define("ds-input",m);class y extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return["elevation","hover-effect"]}attributeChangedCallback(t,r,e){r!==e&&this.render()}connectedCallback(){this.render()}render(){const t=this.getAttribute("elevation")||"medium",r=this.hasAttribute("hover-effect");this.shadowRoot.innerHTML=`\n\t\t\t<style>\n\t\t\t\t:host {\n\t\t\t\tdisplay: block;\n\t\t\t\t--card-background: var(--ds-card-background, white);\n\t\t\t\t--card-border-radius: var(--ds-card-border-radius, 8px);\n\t\t\t\t--card-border-color: var(--ds-card-border-color, ${n.gray200});\n\t\t\t\t--card-padding: var(--ds-card-padding, ${d});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.card {\n\t\t\t\tbackground-color: var(--card-background);\n\t\t\t\tborder-radius: var(--card-border-radius);\n\t\t\t\tborder: 1px solid var(--card-border-color);\n\t\t\t\tpadding: var(--card-padding);\n\t\t\t\tbox-shadow: ${u[t]};\n\t\t\t\ttransition: box-shadow 0.3s, transform 0.3s;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t${r?`\n\t\t\t\t.card:hover {\n\t\t\t\tbox-shadow: ${u.high};\n\t\t\t\ttransform: translateY(-2px);\n\t\t\t\t}\n\t\t\t\t`:""}\n\t\t\t</style>\n\t\t\t\n\t\t\t<div class="card">\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n    \t`}}customElements.define("ds-card",y);class f extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._activeTab=0}static get observedAttributes(){return["active"]}attributeChangedCallback(t,r,e){"active"===t&&r!==e&&(this._activeTab=parseInt(e,10)||0,this._updateActiveTab())}connectedCallback(){this.render(),this._setupEventListeners(),this._updateActiveTab()}disconnectedCallback(){this._removeEventListeners()}_setupEventListeners(){const t=this.shadowRoot.querySelector(".tab-list");t&&t.addEventListener("click",this._handleTabClick.bind(this))}_removeEventListeners(){const t=this.shadowRoot.querySelector(".tab-list");t&&t.removeEventListener("click",this._handleTabClick.bind(this))}_handleTabClick(t){const r=t.target.closest(".tab");if(r){const t=Array.from(r.parentNode.children).indexOf(r);this.setActiveTab(t)}}setActiveTab(t){this._activeTab=t,this.setAttribute("active",t),this._updateActiveTab(),this.dispatchEvent(new CustomEvent("ds-tab-change",{bubbles:!0,composed:!0,detail:{index:t}}))}_updateActiveTab(){const t=this.shadowRoot.querySelectorAll(".tab"),r=this.shadowRoot.querySelector("slot").assignedElements();t.forEach(((t,r)=>{t.setAttribute("aria-selected",r===this._activeTab?"true":"false"),t.setAttribute("tabindex",r===this._activeTab?"0":"-1"),t.classList.toggle("active",r===this._activeTab)})),r.forEach(((t,r)=>{t.hidden=r!==this._activeTab,t.setAttribute("role","tabpanel"),t.setAttribute("tabindex","0"),t.setAttribute("aria-labelledby",`tab-${r}`)}))}render(){const t=Array.from(this.children).map(((t,r)=>t.getAttribute("label")||`Tab ${r+1}`));this.shadowRoot.innerHTML=`\n            <style>\n                :host {\n                display: block;\n                --tabs-color: var(--ds-tabs-color, ${n.gray900});\n                --tabs-color-hover: var(--ds-tabs-color-hover, ${n.primary});\n                --tabs-active-color: var(--ds-tabs-active-color, ${n.primary});\n                --tabs-active-border-color: var(--ds-tabs-active-border-color, ${n.primary});\n                --tabs-border-color: var(--ds-tabs-border-color, ${n.gray300});\n                }\n                \n                .tabs-container {\n                display: flex;\n                flex-direction: column;\n                }\n                \n                .tab-list {\n                display: flex;\n                border-bottom: 1px solid var(--tabs-border-color);\n                margin-bottom: ${i};\n                }\n                \n                .tab {\n                padding: ${s} ${i};\n                cursor: pointer;\n                font-family: ${l};\n                font-size: ${c.base};\n                font-weight: ${b.medium};\n                color: var(--tabs-color);\n                background: transparent;\n                border: none;\n                border-bottom: 2px solid transparent;\n                margin-bottom: -1px;\n                transition: color 0.2s, border-color 0.2s;\n                }\n                \n                .tab:hover {\n                color: var(--tabs-color-hover);\n                }\n                \n                .tab.active {\n                color: var(--tabs-active-color);\n                border-bottom: 2px solid var(--tabs-active-border-color);\n                }\n                \n                .tab-panel {\n                display: none;\n                }\n                \n                .tab-panel.active {\n                display: block;\n                }\n            </style>\n            \n            <div class="tabs-container">\n                <div class="tab-list" role="tablist">\n                ${t.map(((t,r)=>`\n                    <button \n                    class="tab ${r===this._activeTab?"active":""}" \n                    role="tab" \n                    id="tab-${r}" \n                    aria-selected="${r===this._activeTab}" \n                    tabindex="${r===this._activeTab?"0":"-1"}"\n                    >\n                    ${t}\n                    </button>\n                `)).join("")}\n                </div>\n                <div class="tab-content">\n                <slot></slot>\n                </div>\n            </div>\n        `}}customElements.define("ds-tabs",f);class x extends HTMLElement{constructor(){super()}static get observedAttributes(){return["label"]}attributeChangedCallback(t,r,e){"label"===t&&this.parentElement&&r!==e&&this.parentElement.render()}connectedCallback(){this.hasAttribute("role")||this.setAttribute("role","tabpanel")}}customElements.define("ds-tab-panel",x),document.addEventListener("DOMContentLoaded",(()=>{const t=window.matchMedia("(prefers-color-scheme: dark)").matches;e(localStorage.getItem("ds-theme")||(t?"dark":"light"));const r=document.getElementById("theme-toggle");r&&r.addEventListener("click",(()=>{const t=o();localStorage.setItem("ds-theme",t)}))})),function(){const t=document.createElement("style");t.textContent="\n    :root {\n      /* These are fallback values if JavaScript fails to load */\n      --ds-color-primary: #0066cc;\n      --ds-color-primary-light: #4d94ff;\n      --ds-color-primary-dark: #004c99;\n      /* ... other default variables ... */\n    }\n    \n    /* Global styles */\n    body {\n      font-family: var(--ds-font-family);\n      color: var(--ds-color-gray-900);\n      background-color: var(--ds-color-white);\n      line-height: var(--ds-line-height-normal);\n      transition: background-color 0.3s, color 0.3s;\n    }\n  ",document.head.appendChild(t)}();
